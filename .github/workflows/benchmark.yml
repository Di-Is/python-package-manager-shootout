# DO NOT EDIT MANUALLY
# This file is generated by ./bin/build_workflow.sh
---
name: benchmark
on:
  push:
jobs:
  poetry:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: setup
        run: ./bin/actions_prereqs.sh

      - name: tooling
        run: |
          /usr/bin/time --output=timings/tooling.txt --format="%e,%S,%U,%P,%M,%I,%O" \
            make poetry-tooling

      - name: import
        run: |
          /usr/bin/time --output=timings/import.txt --format="%e,%S,%U,%P,%M,%I,%O" \
            make poetry-import

      - name: lock
        run: |
          make poetry-clean-cache
          make poetry-clean-venv
          make poetry-clean-lock
          /usr/bin/time --output=timings/lock.txt --format="%e,%S,%U,%P,%M,%I,%O" \
            make poetry-lock

      - name: install cold
        run: |
         make poetry-clean-cache
         make poetry-clean-venv
         /usr/bin/time --output=timings/install-cold.txt --format="%e,%S,%U,%P,%M,%I,%O" \
           make poetry-install

      - name: install warm
        run: |
          make poetry-clean-venv
          /usr/bin/time --output=timings/install-warm.txt --format="%e,%S,%U,%P,%M,%I,%O" \
            make poetry-install

      - name: add package
        run: |
          /usr/bin/time --output=timings/add-package.txt --format="%e,%S,%U,%P,%M,%I,%O" \
            make poetry-add-package

      - name: stats
        run: |
          VERSION=$(make poetry-version)
          echo "tool,version,stat,elapsed time,system,user,cpu percent,max rss,inputs,outputs" > stats.csv
          for stat in "tooling" "import" "lock" "install-cold" "install-warm" "add-package"; do
            echo "poetry,$VERSION,$stat,$(cat timings/$stat.txt)" >> stats.csv
          done
          mdtable stats.csv >> $GITHUB_STEP_SUMMARY
  pdm:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: setup
        run: ./bin/actions_prereqs.sh

      - name: tooling
        run: |
          /usr/bin/time --output=timings/tooling.txt --format="%e,%S,%U,%P,%M,%I,%O" \
            make pdm-tooling

      - name: import
        run: |
          /usr/bin/time --output=timings/import.txt --format="%e,%S,%U,%P,%M,%I,%O" \
            make pdm-import

      - name: lock
        run: |
          make pdm-clean-cache
          make pdm-clean-venv
          make pdm-clean-lock
          /usr/bin/time --output=timings/lock.txt --format="%e,%S,%U,%P,%M,%I,%O" \
            make pdm-lock

      - name: install cold
        run: |
         make pdm-clean-cache
         make pdm-clean-venv
         /usr/bin/time --output=timings/install-cold.txt --format="%e,%S,%U,%P,%M,%I,%O" \
           make pdm-install

      - name: install warm
        run: |
          make pdm-clean-venv
          /usr/bin/time --output=timings/install-warm.txt --format="%e,%S,%U,%P,%M,%I,%O" \
            make pdm-install

      - name: add package
        run: |
          /usr/bin/time --output=timings/add-package.txt --format="%e,%S,%U,%P,%M,%I,%O" \
            make pdm-add-package

      - name: stats
        run: |
          VERSION=$(make pdm-version)
          echo "tool,version,stat,elapsed time,system,user,cpu percent,max rss,inputs,outputs" > stats.csv
          for stat in "tooling" "import" "lock" "install-cold" "install-warm" "add-package"; do
            echo "pdm,$VERSION,$stat,$(cat timings/$stat.txt)" >> stats.csv
          done
          mdtable stats.csv >> $GITHUB_STEP_SUMMARY
  pipenv:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: setup
        run: ./bin/actions_prereqs.sh

      - name: tooling
        run: |
          /usr/bin/time --output=timings/tooling.txt --format="%e,%S,%U,%P,%M,%I,%O" \
            make pipenv-tooling

      - name: import
        run: |
          /usr/bin/time --output=timings/import.txt --format="%e,%S,%U,%P,%M,%I,%O" \
            make pipenv-import

      - name: lock
        run: |
          make pipenv-clean-cache
          make pipenv-clean-venv
          make pipenv-clean-lock
          /usr/bin/time --output=timings/lock.txt --format="%e,%S,%U,%P,%M,%I,%O" \
            make pipenv-lock

      - name: install cold
        run: |
         make pipenv-clean-cache
         make pipenv-clean-venv
         /usr/bin/time --output=timings/install-cold.txt --format="%e,%S,%U,%P,%M,%I,%O" \
           make pipenv-install

      - name: install warm
        run: |
          make pipenv-clean-venv
          /usr/bin/time --output=timings/install-warm.txt --format="%e,%S,%U,%P,%M,%I,%O" \
            make pipenv-install

      - name: add package
        run: |
          /usr/bin/time --output=timings/add-package.txt --format="%e,%S,%U,%P,%M,%I,%O" \
            make pipenv-add-package

      - name: stats
        run: |
          VERSION=$(make pipenv-version)
          echo "tool,version,stat,elapsed time,system,user,cpu percent,max rss,inputs,outputs" > stats.csv
          for stat in "tooling" "import" "lock" "install-cold" "install-warm" "add-package"; do
            echo "pipenv,$VERSION,$stat,$(cat timings/$stat.txt)" >> stats.csv
          done
          mdtable stats.csv >> $GITHUB_STEP_SUMMARY
  pip-tools:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: setup
        run: ./bin/actions_prereqs.sh

      - name: tooling
        run: |
          /usr/bin/time --output=timings/tooling.txt --format="%e,%S,%U,%P,%M,%I,%O" \
            make pip-tools-tooling

      - name: import
        run: |
          /usr/bin/time --output=timings/import.txt --format="%e,%S,%U,%P,%M,%I,%O" \
            make pip-tools-import

      - name: lock
        run: |
          make pip-tools-clean-cache
          make pip-tools-clean-venv
          make pip-tools-clean-lock
          /usr/bin/time --output=timings/lock.txt --format="%e,%S,%U,%P,%M,%I,%O" \
            make pip-tools-lock

      - name: install cold
        run: |
         make pip-tools-clean-cache
         make pip-tools-clean-venv
         /usr/bin/time --output=timings/install-cold.txt --format="%e,%S,%U,%P,%M,%I,%O" \
           make pip-tools-install

      - name: install warm
        run: |
          make pip-tools-clean-venv
          /usr/bin/time --output=timings/install-warm.txt --format="%e,%S,%U,%P,%M,%I,%O" \
            make pip-tools-install

      - name: add package
        run: |
          /usr/bin/time --output=timings/add-package.txt --format="%e,%S,%U,%P,%M,%I,%O" \
            make pip-tools-add-package

      - name: stats
        run: |
          VERSION=$(make pip-tools-version)
          echo "tool,version,stat,elapsed time,system,user,cpu percent,max rss,inputs,outputs" > stats.csv
          for stat in "tooling" "import" "lock" "install-cold" "install-warm" "add-package"; do
            echo "pip-tools,$VERSION,$stat,$(cat timings/$stat.txt)" >> stats.csv
          done
          mdtable stats.csv >> $GITHUB_STEP_SUMMARY
